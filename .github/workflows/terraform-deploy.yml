name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - plan
          - apply
          - destroy
  push:
    branches: [ main ]
    paths:
      - 'infrastructure/terraform/**'
      - 'lambda_functions/**'
      - '.github/workflows/terraform-deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.6
      
      - name: Package and upload Lambda functions
        if: github.event.inputs.action != 'destroy'
        run: |
          cd lambda_functions/text_to_s3/
          zip -r ../text_to_s3.zip *
          cd ../numbers_1_to_1000/
          zip -r ../numbers_1_to_1000.zip *
          cd ../numbers_1001_to_2000/
          zip -r ../numbers_1001_to_2000.zip *
          cd ../../
          
          CODE_BUCKET=code-bucket-$(aws sts get-caller-identity --query Account --output text)
          
          # バケットが存在しない場合は作成
          aws s3api head-bucket --bucket ${CODE_BUCKET} 2>/dev/null || aws s3 mb s3://${CODE_BUCKET}
          
          aws s3 cp lambda_functions/text_to_s3.zip s3://${CODE_BUCKET}/lambda_functions/
          aws s3 cp lambda_functions/numbers_1_to_1000.zip s3://${CODE_BUCKET}/lambda_functions/
          aws s3 cp lambda_functions/numbers_1001_to_2000.zip s3://${CODE_BUCKET}/lambda_functions/
      
      - name: Terraform Init
        working-directory: ./infrastructure/terraform
        run: terraform init
      
      - name: Terraform Plan
        if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply'
        working-directory: ./infrastructure/terraform
        run: |
          CODE_BUCKET=code-bucket-$(aws sts get-caller-identity --query Account --output text)
          terraform plan -var="code_bucket=${CODE_BUCKET}"
      
      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: ./infrastructure/terraform
        run: |
          CODE_BUCKET=code-bucket-$(aws sts get-caller-identity --query Account --output text)
          terraform apply -auto-approve -var="code_bucket=${CODE_BUCKET}"
      
      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: ./infrastructure/terraform
        run: |
          CODE_BUCKET=code-bucket-$(aws sts get-caller-identity --query Account --output text)
          terraform destroy -auto-approve -var="code_bucket=${CODE_BUCKET}"